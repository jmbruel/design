= SysMLBook
:toc:
//:stylesdir: css/
//:stylesheet: jmb.css

== Avant propos

Ce que n'est pas ce livre :

- Ce n'est pas un livre sur la meilleure approche méthodologique,

Pourquoi lire ce livre ?

- Je veux fiabiliser mon processus d'IS.
- je veux gagner du temps.
- Je veux utiliser des solutions open-source pour l'IS.
- je veux utiliser des normes d'IS.
- Je veux apprendre SysML par la pratique.
- Je veux utiliser Papyrus-SysML.

NOTE: Modéliser versus dessiner !  + Modèles versus documents ! => modéliser fournit la capacité à assister par l'ordinateur l'ingénierie système => réduire les temps de dév, augmenter.

Comment lire ce livre ?

- Préciser ici que l'objectif du livre étant de fournir un support de formation à SysML par la pratique, le chapitre « Bien démarrer » est primordiale.

A qui s'adresse le livre ?

- Ignorant, débutant, ou avancé en SysML ?
- Ignorant, débutant, ou avancé en IS ?
- Ignorant, débutant, ou avancé en MBSE ?

Comment se préparer à lire au mieux ce livre ?

=> Proposer des pistes  de « formation » pour rentrer dans le cadre le cas échéant.
=> Description de la mise en place de l’environnement pour la mise en pratique.
=> Fournir un petit outillage d  ala ise ne pratique des conseils du livre. ?
=> Fournir un petit outillage Papyrus dédié à la mise en pratique du livre (Spécialisation particulière, projet type, exemple de modèle, cheat sheet, etc.) que l'on pourrait mettre à disposition via le site de Papyrus www.eclipse.org/papyrus/

== Introduction

Aborder le fait qu'il y a bcp de méthodes qui existent et que ici on est agnostique. En revanche, on en choisit une (simplifié) pour l'illustration pour la mise en pratique de SysML dans Papyrus.

== Cas d'étude
Présenter le cas d'étude avec des illustrations SysML mais avec un look métier.
Deux étapes : dans un premier temps, le cas d'étude est décrit globalement au travers de ses diagrammes sans s'attacher aux diagrammes en soit. Dans un second temps, détail de chaque diagramme.

== Les contours de SysML (introduction à SysML)

Introduire également ici la méthodologie simplifiée adoptée pour le livre. Au travers de cette présentation, on introduira également les différents diagrammes de SysML.

L'objet de ce chapitre est de présenter l'ensemble des diagrammes SysML et à quel(s) questions ils peuvent permettre de répondre par rapport à des problématique d'IS.

== Avant de démarrer
Installation de base et au sujet de l'organisation des modèles.
Information sur le matériel disponible autour du livre (examples, forums, etc.).
Besoins, exigences et usages
Introduit SysML Req, les diagrammes d'exigences et les diagrammes de cas d’utilisation, les diagrammes de séquence « système » pour décrire les scénarios d'usage associés.
Après avoir parler des concepts SysML pour traiter de ce sujet, dire qu'il peut être nécessaire d’organiser les exigences => diagramme de paquetage.

== Structure et contraintes
IBD, BDD et Parametric.

== Comportement (au sens atomique , local, block)
Diagramme de machine à états-transitions (aspects contrôle) et diagramme d'activité (description algorithme ?)
Utilisation OpaqueBehavior ?

== Interaction
Diagramme de séquence et d’activité en version description global de comportement (description de processus => BPMN ?).

== Préoccupations transverses de modélisation
Traçabilité, allocation etc.

== Modéliser oui, mais…
Versionner et configurer
Comparer et fusionner
Simuler
Analyser
Comment utiliser les paramétrique pour faire le liens entre les outils de moélisation et les outils d'analyse)
Tester
Générer du code
Documenter
Personnalisation de l'outil à un contexte/domaine spécifique

:numbered!:
== Annexes

=== Index (Reference guide)
Liste des concepts et renvoies vers leur description dans le livre.

=== Les histoires de SysML et de Papyrus

/////
=== Divers

Au sujet de SysML => s'appuyer sur les niveaux tels que définit dans le certificat SysML de l'OMG.

Limite du nombre de pages => 250 pages

Liens avec le livre SysML de Sandy ?

Solutions possibles d’organisation globales :
*	si public débutant seulement alors un chapitre sur les possibilités avancés incluant les facilités de personnalisation, intégration avec d'autres formalismes/outils, etc.
*	si public débutant et avancé, alors :
**	Deux parties dédiés.
**	Pour chaque chapitre (quand cela fait du sens), avoir deux niveaux de présentation, débutant et avancé.
**	Des parties bien marquées « avancé » au fil de l'eau.

/////
